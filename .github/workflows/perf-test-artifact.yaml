##
# Copyright (C) 2022-2023 Hedera Hashgraph, LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
##

name: "Generate Artifact for Performance Test"
on:
  workflow_call:
    inputs:
      # Valid version policies are as follows: specified, branch-commit, adhoc-commit
      version-policy:
        description: "Version Policy:"
        type: string
        required: true
      # Valid options are none, integration, and preview
      trigger-env-deploy:
        description: "Deploy to Environment:"
        type: string
        required: true
        default: "none"
      # Valid SDK release profiles are as follows:
      # - none
      # - AdhocCommit
      # - DevelopCommit
      # - DevelopDailySnapshot
      # - DevelopSnapshot
      # - PrereleaseChannel
      sdk-release-profile:
        description: "SDK Release Profile:"
        type: string
        required: true
        default: "none"
      new-version:
        description: "New Version:"
        type: string
        required: false
      dry-run-enabled:
        description: "Perform Dry Run"
        type: boolean
        required: false
        default: false
      java-distribution:
        description: "Java JDK Distribution:"
        type: string
        required: false
        default: "temurin"
      java-version:
        description: "Java JDK Version:"
        type: string
        required: false
        default: "17.0.8"
      gradle-version:
        description: "Gradle Version:"
        type: string
        required: false
        default: "wrapper"

    secrets:
      access-token:
        required: true
      bucket-name:
        required: true
      cdn-bucket-name:
        required: true
      svcs-ossrh-username:
        required: true
      svcs-ossrh-password:
        required: true
      svcs-gpg-key-contents:
        required: true
      svcs-gpg-key-passphrase:
        required: true
      sdk-ossrh-username:
        required: true
      sdk-ossrh-password:
        required: true
      sdk-gpg-key-contents:
        required: true
      sdk-gpg-key-passphrase:
        required: true
      slack-webhook-url:
        required: true
      jenkins-integration-url:
        required: false
    outputs:
      build-version:
        description: "The build artifact version"
        value: ${{ jobs.build-artifact.outputs.build-version }}

defaults:
  run:
    shell: bash

env:
  LC_ALL: C.UTF-8

permissions:
  id-token: write
  contents: read

jobs:
  validate:
    name: Validate
    runs-on: [ self-hosted, Linux, large, ephemeral ]
    outputs:
      branch-name: ${{ steps.parameters.outputs.branch-name }}
      branch-name-lower: ${{ steps.parameters.outputs.branch-name-lower }}
      branch-name-safe: ${{ steps.parameters.outputs.branch-name-safe }}
      commit-prefix: ${{ steps.parameters.outputs.commit-prefix }}
      commit-id: ${{ steps.parameters.outputs.commit-id }}
      commit-id-short: ${{ steps.parameters.outputs.commit-id-short }}
      version: ${{ steps.effective-version.outputs.number }}
      version-prefix: ${{ steps.effective-version.outputs.prefix }}
      prerelease: ${{ steps.effective-version.outputs.prerelease }}
    steps:
      - name: Verify Workflow Parameters
        id: parameters
        run: |
          BRANCH_NAME="${{ github.head_ref || github.ref_name }}"
          BRANCH_NAME="${BRANCH_NAME##origin/}"
          BRANCH_NAME_LOWER="$(echo "${BRANCH_NAME}" | tr '[:upper:]' '[:lower:]')"
          BRANCH_NAME_SAFE="$(echo "${BRANCH_NAME_LOWER}" | tr '/' '-' | tr '_' '.')"

          echo "branch-name-lower=${BRANCH_NAME_LOWER}" >>"${GITHUB_OUTPUT}"
          echo "commit-id-short=$(echo "${{ github.sha }}" | cut -c1-8)" >>"${GITHUB_OUTPUT}"

  build-artifact:
    name: Build Artifact
    runs-on: [self-hosted, Linux, large, ephemeral]
    needs:
      - validate
    outputs:
      build-version: ${{ steps.artifact-release.outputs.build-version }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@35b0e87d162680511bf346c299f71c9c5c379033 # v1.1.1
        with:
          workload_identity_provider: "projects/235822363393/locations/global/workloadIdentityPools/hedera-builds-pool/providers/hedera-builds-gh-actions"
          service_account: "hedera-artifact-builds@devops-1-254919.iam.gserviceaccount.com"

      - name: Setup Google Cloud SDK
        uses: google-github-actions/setup-gcloud@e30db14379863a8c79331b04a9969f4c1e225e0b # v1.1.1


      - name: Create Artifact Archive
        id: artifact-release
        working-directory: ${{ steps.artifact-staging.outputs.folder }}
        run: |
          ARTIFACT_NAME="build-${{ needs.validate.outputs.branch-name-lower }}-${{ needs.validate.outputs.commit-id-short }}"
          echo "build-version=${ARTIFACT_NAME}" >>"${GITHUB_OUTPUT}"
          gsutil ls -l "gs://${{ secrets.bucket-name }}/*.zip"


      - name: Check If Release Artifact Exist in Bucket
        id: check-if-exist
        run: |
          set +e
          ARTIFACT_NAME="build-v${{ needs.validate.outputs.version }}"
          ARTIFACT_PATH="gs://${{ secrets.bucket-name }}/${ARTIFACT_NAME}.zip"
          echo "ARTIFACT_PATH=${ARTIFACT_PATH}"
          gsutil -q stat "${ARTIFACT_PATH}"
          PATH_EXIST=$?
          while loop check
          if [ ${PATH_EXIST} -eq 0 ]; then
            echo "Artifact Already Exist"
            echo "exist=true" >>"${GITHUB_OUTPUT}"
          else
            echo "Artifact Not Exist"
            echo "exist=false" >>"${GITHUB_OUTPUT}"
          fi
