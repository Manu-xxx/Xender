name: Continuous Build

on:
  pull_request:
    branches: [ master, release/** ]
  push:
    branches: [ master, release/** ]
    tags: [ v* ]

jobs:
  setup:
    name: Setup
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: 17
          distribution: temurin
  build:
    name: Build
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Build & Unit Test
        uses: gradle/gradle-build-action@v2
        with:
          arguments: build
      - name: Integration Testing
        uses: gradle/gradle-build-action@v2
        with:
          arguments: itest
  javadoc:
    name: Javadoc
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: 17
          distribution: temurin
      - name: Javadoc
        uses: gradle/gradle-build-action@v2
        with:
          arguments: javadoc
  sonar:
    name: SonarCloud
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Run SonarCloud
        uses: gradle/gradle-build-action@v2
        with:
          arguments: sonarqube
  smoke:
    name: Smoke End-to-End Tests
    runs-on: ubuntu-latest
    needs: build
    strategy:
      fail-fast: false
      matrix:
        packages: ['contract.opcodes,contract.openzeppelin,contract.traceability',
                   'contract.precompile.part1,contract.records',
                   'contract.precompile.part2,contract.hapi',
                   'contract.opcodes.eth,contract.openzeppelin.eth,contract.traceability.eth',
                   'contract.precompile.part1.eth,contract.records.eth',
                   'contract.precompile.part2.eth,contract.hapi.eth']
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: 17
          distribution: temurin
      - name: Build docker images # build the image for hedera-node
        run: bash compose-build.sh
      - name: Start network # start 3 node network
        run: docker compose up -d
      - name: Healthcheck for Hedera node # wait until node is ready to serve requests
        working-directory: .github/scripts
        run: bash healthcheck.sh
      - name: Run EET Tests
        uses: gradle/gradle-build-action@v2
        with:
          #        run: ./mvnw test -pl test-clients -Dtest=E2EPackageRunner -DdefaultPort=50213 -DfailIfNoTests=false -Dpackages=${{matrix.packages}}
          arguments: eet -DdefaultPort=50213 -Dpackages=${{matrix.packages}}


#      - name: Upload surefire report
#        if: always()
#        uses: actions/upload-artifact@v2
#        with:
#          name: surefire-report-(${{matrix.packages}})
#          path: test-clients/target/surefire-reports/*


#      - name: Upload build reports
#        uses: actions/upload-artifact@v3
#        with:
#          name: build-reports
#          path: build/reports/
#      - name: Upload coverage to Codecov
#        if: always()
#        uses: codecov/codecov-action@v2
#        with:
#          files: 'jacoco.xml'
