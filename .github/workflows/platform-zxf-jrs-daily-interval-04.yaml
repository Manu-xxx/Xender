##
# Copyright (C) 2022-2023 Hedera Hashgraph, LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
##

name: "Z-Platform XF: JRS Daily (Interval: 4)"
on:
  workflow_dispatch:
    inputs:
      ref:
        description: "The branch, tag or SHA to checkout."
        required: true
        type: string
      branch-name:
        description: ""
        required: false
        type: string
      concurrency-group:
        description: "The concurrency group name to limit simultaneous workflows."
        required: false
        type: string

defaults:
  run:
    shell: bash

concurrency:
  group: ${{ github.event.inputs.concurrency-group || format('{0}-{1}-flow-jrs-daily-interval-groups', github.ref_name, github.sha) }}

# Panel Definition & Timings:
#  "configs/suites/daily/4N/GCP-Daily-VMerkle-4N.json"            ----            46m
#  "configs/suites/daily/4N/GCP-Daily-VMerkle2-4N.json"           ----            97m
#  "configs/suites/daily/4N/GCP-Daily-VMerkleLong-4N.json"        ----           105m
#  "configs/suites/daily/4N/GCP-Daily-VMerkleSC-4N.json"          ----           154m
#  "configs/suites/daily/4N/GCP-Daily-VMerkleSC2-4N.json"         ----            80m
#  "configs/suites/daily/4N/GCP-Daily-VMerkle-Recovery-4N.json"   ----            60m
#   TOTAL RUN TIME:             542 minutes, 9.03 hours
jobs:
  vmerkle:
    name: VMerkle
    uses: ./.github/workflows/zxc-jrs-regression.yaml
    with:
      ref: ${{ github.event.inputs.ref }}
      branch-name: ${{ github.event.inputs.branch-name }}
      panel-config: "configs/suites/daily/4N/GCP-Daily-VMerkle-4N.json"
    secrets:
      access-token: ${{ secrets.PLATFORM_GH_ACCESS_TOKEN }}
      jrs-ssh-user-name: ${{ secrets.PLATFORM_JRS_SSH_USER_NAME }}
      jrs-ssh-key-file: ${{ secrets.PLATFORM_JRS_SSH_KEY_FILE }}
      gcp-project-number: ${{ secrets.PLATFORM_GCP_PROJECT_NUMBER }}
      gcp-sa-key-contents: ${{ secrets.PLATFORM_GCP_KEY_FILE }}
      slack-api-token: ${{ secrets.PLATFORM_SLACK_API_TOKEN }}
  vmerkle2:
    name: VMerkle2
    uses: ./.github/workflows/zxc-jrs-regression.yaml
    with:
      ref: ${{ github.event.inputs.ref }}
      branch-name: ${{ github.event.inputs.branch-name }}
      panel-config: "configs/suites/daily/4N/GCP-Daily-VMerkle2-4N.json"
    secrets:
      access-token: ${{ secrets.PLATFORM_GH_ACCESS_TOKEN }}
      jrs-ssh-user-name: ${{ secrets.PLATFORM_JRS_SSH_USER_NAME }}
      jrs-ssh-key-file: ${{ secrets.PLATFORM_JRS_SSH_KEY_FILE }}
      gcp-project-number: ${{ secrets.PLATFORM_GCP_PROJECT_NUMBER }}
      gcp-sa-key-contents: ${{ secrets.PLATFORM_GCP_KEY_FILE }}
      slack-api-token: ${{ secrets.PLATFORM_SLACK_API_TOKEN }}
    if: ${{ !cancelled() && always() }}
  vmerkle-long:
    name: VMerkleLong
    uses: ./.github/workflows/zxc-jrs-regression.yaml
    with:
      ref: ${{ github.event.inputs.ref }}
      branch-name: ${{ github.event.inputs.branch-name }}
      panel-config: "configs/suites/daily/4N/GCP-Daily-VMerkleLong-4N.json"
    secrets:
      access-token: ${{ secrets.PLATFORM_GH_ACCESS_TOKEN }}
      jrs-ssh-user-name: ${{ secrets.PLATFORM_JRS_SSH_USER_NAME }}
      jrs-ssh-key-file: ${{ secrets.PLATFORM_JRS_SSH_KEY_FILE }}
      gcp-project-number: ${{ secrets.PLATFORM_GCP_PROJECT_NUMBER }}
      gcp-sa-key-contents: ${{ secrets.PLATFORM_GCP_KEY_FILE }}
      slack-api-token: ${{ secrets.PLATFORM_SLACK_API_TOKEN }}
    if: ${{ !cancelled() && always() }}
  vmerkle-sc:
    name: VMerkleSC
    uses: ./.github/workflows/zxc-jrs-regression.yaml
    with:
      ref: ${{ github.event.inputs.ref }}
      branch-name: ${{ github.event.inputs.branch-name }}
      panel-config: "configs/suites/daily/4N/GCP-Daily-VMerkleSC-4N.json"
    secrets:
      access-token: ${{ secrets.PLATFORM_GH_ACCESS_TOKEN }}
      jrs-ssh-user-name: ${{ secrets.PLATFORM_JRS_SSH_USER_NAME }}
      jrs-ssh-key-file: ${{ secrets.PLATFORM_JRS_SSH_KEY_FILE }}
      gcp-project-number: ${{ secrets.PLATFORM_GCP_PROJECT_NUMBER }}
      gcp-sa-key-contents: ${{ secrets.PLATFORM_GCP_KEY_FILE }}
      slack-api-token: ${{ secrets.PLATFORM_SLACK_API_TOKEN }}
    needs:
      - vmerkle-long
    if: ${{ !cancelled() && always() }}
  vmerkle-sc2:
    name: VMerkleSC2
    uses: ./.github/workflows/zxc-jrs-regression.yaml
    with:
      ref: ${{ github.event.inputs.ref }}
      branch-name: ${{ github.event.inputs.branch-name }}
      panel-config: "configs/suites/daily/4N/GCP-Daily-VMerkleSC2-4N.json"
    secrets:
      access-token: ${{ secrets.PLATFORM_GH_ACCESS_TOKEN }}
      jrs-ssh-user-name: ${{ secrets.PLATFORM_JRS_SSH_USER_NAME }}
      jrs-ssh-key-file: ${{ secrets.PLATFORM_JRS_SSH_KEY_FILE }}
      gcp-project-number: ${{ secrets.PLATFORM_GCP_PROJECT_NUMBER }}
      gcp-sa-key-contents: ${{ secrets.PLATFORM_GCP_KEY_FILE }}
      slack-api-token: ${{ secrets.PLATFORM_SLACK_API_TOKEN }}
    if: ${{ !cancelled() && always() }}
#  vmerkle-recovery:
#    name: VMerkle-Recovery
#    uses: ./.github/workflows/zxc-jrs-regression.yaml
#    with:
#      ref: ${{ github.event.inputs.ref }}
#      branch-name: ${{ github.event.inputs.branch-name }}
#      panel-config: "configs/suites/daily/4N/GCP-Daily-VMerkle-Recovery-4N.json"
#    secrets:
#      access-token: ${{ secrets.PLATFORM_GH_ACCESS_TOKEN }}
#      jrs-ssh-user-name: ${{ secrets.PLATFORM_JRS_SSH_USER_NAME }}
#      jrs-ssh-key-file: ${{ secrets.PLATFORM_JRS_SSH_KEY_FILE }}
#      gcp-project-number: ${{ secrets.PLATFORM_GCP_PROJECT_NUMBER }}
#      gcp-sa-key-contents: ${{ secrets.PLATFORM_GCP_KEY_FILE }}
#      slack-api-token: ${{ secrets.PLATFORM_SLACK_API_TOKEN }}
#    needs:
#      - vmerkle-sc2
#    if: ${{ !cancelled() && always() }}
