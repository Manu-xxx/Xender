package com.hedera.services.config;
/*-
 * ‌
 * Hedera Services Node
 * ​
 * Copyright (C) 2018 - 2021 Hedera Hashgraph, LLC
 * ​
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * ‍
 */

import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.core.LoggerContext;
import org.junit.jupiter.api.AfterAll;
import org.junit.jupiter.api.BeforeAll;
import org.junit.jupiter.params.ParameterizedTest;
import org.junit.jupiter.params.provider.CsvSource;

import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.PrintStream;

import static org.junit.jupiter.api.Assertions.assertFalse;
import static org.junit.jupiter.api.Assertions.assertTrue;

class Log4JExploitTest {
	private static final ByteArrayOutputStream outContent = new ByteArrayOutputStream();
	private static final PrintStream originalOut = System.out;

	@BeforeAll
	public static void setUpStreams() {
		System.setOut(new PrintStream(outContent));
	}

	@AfterAll
	public static void restoreStreams() {
		System.setOut(originalOut);
	}


	@ParameterizedTest
	@CsvSource({
			"configuration/mainnet/log4j2.xml",
			"configuration/testnet/log4j2.xml",
			"configuration/previewnet/log4j2.xml",
			"configuration/preprod/log4j2.xml",
			"configuration/dev/log4j2.xml",
			"configuration/compose/log4j2.xml"})
	void testLog4jExploit(final String configPath) {
		LoggerContext context = (LoggerContext) LogManager.getContext(false);
		File file = new File(configPath);
		context.setConfigLocation(file.toURI());

		final var malUri_toFailLookUp = "${jndi:https://previewnet.mirrornode.hedera.com/api/v1/accounts?account.id=0.0.90}";
		final var expectedLog = "We’re doomed. " + malUri_toFailLookUp;
		final var stackStraceSample = "at org.apache.logging.log4j.core.net.JndiManager.lookup";

		LogManager.getLogger().warn(expectedLog);

		// Test if the jndi lookup activated and failed because of bad naming.
		var actualLog = outContent.toString();

		assertTrue(actualLog.contains(expectedLog));
		assertFalse(actualLog.contains(stackStraceSample));
	}
}
